{"name": "Регистрация нового пользователя в магазине опенкарта", "status": "failed", "statusDetails": {"message": "AssertionError: Не найден элемент с селектором: //h1[text()=\"Your Account Has Been Created!\"]", "trace": "self = <page_objects.customer_section.pages.register_page.RegisterPage object at 0x7f8a7f4841c0>\nlocator = 'xpath', selector = '//h1[text()=\"Your Account Has Been Created!\"]'\ntimeout = 5\n\n    def find_element_with_wait(self, locator, selector, timeout=5):\n        self.logger.debug(f\"Поиск элемента '{selector}'\")\n        try:\n>           element = WebDriverWait(self.browser, timeout).until(EC.presence_of_element_located((locator, selector)))\n\n../page_objects/base_page.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f0f4617c5cd9085aa00a7714ced7f7be\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f8a7f484460>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../venv/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbrowser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"f0f4617c5cd9085aa00a7714ced7f7be\")>\nurl = 'http://10.51.33.220:8081'\n\n    @allure.title(\"Регистрация нового пользователя в магазине опенкарта\")\n    def test_new_customer_registration(browser, url):\n        page = HomePage(browser)\n        panel = UpperUserPanel(browser)\n        page.open_page(url)\n        panel.go_to_register()\n        register_page = RegisterPage(browser)\n        register_page.enter_all_user_fields()\n        register_page.click_privacy_policy_checkbox()\n        register_page.click_continue()\n>       register_page.check_successfully_created()\n\ntest_opencart.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../page_objects/customer_section/pages/register_page.py:81: in check_successfully_created\n    self.find_element_with_wait(*self.SUCCESSFUL_TITLE)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page_objects.customer_section.pages.register_page.RegisterPage object at 0x7f8a7f4841c0>\nlocator = 'xpath', selector = '//h1[text()=\"Your Account Has Been Created!\"]'\ntimeout = 5\n\n    def find_element_with_wait(self, locator, selector, timeout=5):\n        self.logger.debug(f\"Поиск элемента '{selector}'\")\n        try:\n            element = WebDriverWait(self.browser, timeout).until(EC.presence_of_element_located((locator, selector)))\n        except TimeoutException:\n            self.attach_screenshot_to_report()\n>           raise AssertionError(\"Не найден элемент с селектором: {}\".format(selector))\nE           AssertionError: Не найден элемент с селектором: //h1[text()=\"Your Account Has Been Created!\"]\n\n../page_objects/base_page.py:21: AssertionError"}, "steps": [{"name": "Перейти на домашнюю страницу", "status": "passed", "parameters": [{"name": "_url", "value": "'http://10.51.33.220:8081'"}], "start": 1637828610163, "stop": 1637828614470}, {"name": "Перейти к регистрации", "status": "passed", "steps": [{"name": "Перейти к профилю покупателя", "status": "passed", "start": 1637828614470, "stop": 1637828615840}], "start": 1637828614470, "stop": 1637828617479}, {"name": "Ввести имя", "status": "passed", "parameters": [{"name": "first_name", "value": "'Joe'"}], "start": 1637828617479, "stop": 1637828617754}, {"name": "Ввести фамилию", "status": "passed", "parameters": [{"name": "last_name", "value": "'Smith'"}], "start": 1637828617754, "stop": 1637828618059}, {"name": "Ввести email", "status": "passed", "parameters": [{"name": "email", "value": "'ed.d.xample@mail.com'"}], "start": 1637828618059, "stop": 1637828618385}, {"name": "Ввести телефон", "status": "passed", "parameters": [{"name": "phone_number", "value": "'+12121234567'"}], "start": 1637828618385, "stop": 1637828618651}, {"name": "Ввести пароль", "status": "passed", "parameters": [{"name": "password", "value": "'ghf54fdgLL'"}], "start": 1637828618651, "stop": 1637828618918}, {"name": "Подтвердить пароль", "status": "passed", "parameters": [{"name": "password", "value": "'ghf54fdgLL'"}], "start": 1637828618918, "stop": 1637828619186}, {"name": "Принять политику конфиденциальности", "status": "passed", "start": 1637828619186, "stop": 1637828620514}, {"name": "Продолжить", "status": "passed", "start": 1637828620514, "stop": 1637828622105}, {"name": "Проверка успешного окончания регистрации", "status": "failed", "statusDetails": {"message": "AssertionError: Не найден элемент с селектором: //h1[text()=\"Your Account Has Been Created!\"]\n", "trace": "  File \"/home/pbochkarev/sources/selenium_logs/venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/pbochkarev/sources/selenium_logs/page_objects/customer_section/pages/register_page.py\", line 81, in check_successfully_created\n    self.find_element_with_wait(*self.SUCCESSFUL_TITLE)\n  File \"/home/pbochkarev/sources/selenium_logs/page_objects/base_page.py\", line 21, in find_element_with_wait\n    raise AssertionError(\"Не найден элемент с селектором: {}\".format(selector))\n"}, "attachments": [{"name": "f0f4617c5cd9085aa00a7714ced7f7be", "source": "aa5e3c56-ddbc-494c-9f61-f33de7debcdd-attachment.png", "type": "image/png"}], "start": 1637828622105, "stop": 1637828627817}], "attachments": [{"name": "log", "source": "b84f0f70-b65c-451d-b03f-febf34de2f42-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "64bfecce-60af-4e64-8fc2-d62c5dd13214-attachment.txt", "type": "text/plain"}], "start": 1637828610163, "stop": 1637828627818, "uuid": "7bf52f50-ae55-4d16-89e3-11b97d6b4d21", "historyId": "b8a7455e7804c3784059a2b6029c24ce", "testCaseId": "88f981a6c0cacd91618a068991ec4f00", "fullName": "tests.test_opencart#test_new_customer_registration", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_opencart"}, {"name": "host", "value": "pbochkarev-workmashine"}, {"name": "thread", "value": "48348-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_opencart"}]}