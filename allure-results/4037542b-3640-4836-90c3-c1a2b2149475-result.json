{"name": "Удаление товара из списка в разделе администартора", "status": "failed", "statusDetails": {"message": "AssertionError: Не найден элемент с селектором: //tbody/tr[./td[contains(text(), \"Canon\")]]//input", "trace": "self = <page_objects.admin_section.sections.catalog.products.products_page.ProductsPage object at 0x7fddfc56e520>\nlocator = 'xpath'\nselector = '//tbody/tr[./td[contains(text(), \"Canon\")]]//input', timeout = 5\n\n    def find_element_with_wait(self, locator, selector, timeout=5):\n        self.logger.debug(f\"Поиск элемента '{selector}'\")\n        try:\n>           element = WebDriverWait(self.browser, timeout).until(EC.presence_of_element_located((locator, selector)))\n\n../page_objects/base_page.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"309aac5c-60dc-40b7-9ab6-12e13469f84c\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7fddfc56eb80>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../venv/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbrowser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"309aac5c-60dc-40b7-9ab6-12e13469f84c\")>\nurl = 'http://192.168.1.123:8081'\n\n    @allure.title(\"Удаление товара из списка в разделе администартора\")\n    def test_delete_product(browser, url):\n        login_page = LoginPage(browser)\n        menu = NavigationPanel(browser)\n        browser_alert = BrowserAlert(browser)\n        title_panel = TitlePanel(browser)\n        login_page.open_page(url)\n        login_page.sign_in(\"user\", \"bitnami\")\n        menu.open_section(Sections.CATALOG_SECTION)\n        menu.open_subsection(Sections.PRODUCTS_SUBSECTION)\n        products_page = ProductsPage(browser)\n>       products_page.checkbox_click(\"Canon\")\n\ntest_opencart.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../page_objects/admin_section/sections/catalog/products/products_page.py:24: in checkbox_click\n    self.click_button(*product_checkbox)\n../page_objects/base_page.py:46: in click_button\n    button = self.find_element_with_wait(locator, selector)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page_objects.admin_section.sections.catalog.products.products_page.ProductsPage object at 0x7fddfc56e520>\nlocator = 'xpath'\nselector = '//tbody/tr[./td[contains(text(), \"Canon\")]]//input', timeout = 5\n\n    def find_element_with_wait(self, locator, selector, timeout=5):\n        self.logger.debug(f\"Поиск элемента '{selector}'\")\n        try:\n            element = WebDriverWait(self.browser, timeout).until(EC.presence_of_element_located((locator, selector)))\n        except TimeoutException:\n            self.attach_screenshot_to_report()\n>           raise AssertionError(\"Не найден элемент с селектором: {}\".format(selector))\nE           AssertionError: Не найден элемент с селектором: //tbody/tr[./td[contains(text(), \"Canon\")]]//input\n\n../page_objects/base_page.py:21: AssertionError"}, "steps": [{"name": "Перейти на страницу авторизации", "status": "passed", "parameters": [{"name": "_url", "value": "'http://192.168.1.123:8081'"}], "start": 1637778333263, "stop": 1637778336952}, {"name": "Ввести логин ", "status": "passed", "parameters": [{"name": "login", "value": "'user'"}], "start": 1637778336953, "stop": 1637778337528}, {"name": "Ввести пароль", "status": "passed", "parameters": [{"name": "password", "value": "'bitnami'"}], "start": 1637778337528, "stop": 1637778338179}, {"name": "Авторизоваться", "status": "passed", "start": 1637778338180, "stop": 1637778339658}, {"name": "Открыть раздел меню", "status": "passed", "parameters": [{"name": "selector", "value": "<Sections.CATALOG_SECTION: ('xpath', \"//a[@href='#collapse1']\")>"}], "start": 1637778339658, "stop": 1637778342576}, {"name": "Открыть подраздел", "status": "passed", "parameters": [{"name": "selector", "value": "<Sections.PRODUCTS_SUBSECTION: ('xpath', \"//nav//a[contains(text(),'Product')]\")>"}], "start": 1637778342577, "stop": 1637778344006}, {"name": "Проставить чекбокс товара", "status": "failed", "statusDetails": {"message": "AssertionError: Не найден элемент с селектором: //tbody/tr[./td[contains(text(), \"Canon\")]]//input\n", "trace": "  File \"/home/pbochkarev/sources/selenium_logs/venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/pbochkarev/sources/selenium_logs/page_objects/admin_section/sections/catalog/products/products_page.py\", line 24, in checkbox_click\n    self.click_button(*product_checkbox)\n  File \"/home/pbochkarev/sources/selenium_logs/page_objects/base_page.py\", line 46, in click_button\n    button = self.find_element_with_wait(locator, selector)\n  File \"/home/pbochkarev/sources/selenium_logs/page_objects/base_page.py\", line 21, in find_element_with_wait\n    raise AssertionError(\"Не найден элемент с селектором: {}\".format(selector))\n"}, "attachments": [{"name": "309aac5c-60dc-40b7-9ab6-12e13469f84c", "source": "85a07c9b-83f7-4981-bcd7-99ca828efbd8-attachment.png", "type": "image/png"}], "parameters": [{"name": "product_name", "value": "'Canon'"}], "start": 1637778344007, "stop": 1637778350373}], "attachments": [{"name": "log", "source": "e631060a-e2e7-4b5a-8acd-9381e47feab1-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "bac1ebb7-9b22-4eac-a177-520a2e0866b1-attachment.txt", "type": "text/plain"}], "start": 1637778333262, "stop": 1637778350378, "uuid": "c3c27b07-0bb3-4ea4-a651-f2c8907b88c7", "historyId": "47fa9a9d0b0287c16f0d3398478561c6", "testCaseId": "87071810d77f94bbd763bb013079512a", "fullName": "tests.test_opencart#test_delete_product", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_opencart"}, {"name": "host", "value": "pbochkarev-workmashine"}, {"name": "thread", "value": "23692-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_opencart"}]}