{"name": "test_delete_product", "status": "failed", "statusDetails": {"message": "AssertionError: Не найден элемент с селектором: //tbody/tr[./td[contains(text(), \"Canon\")]]//input", "trace": "self = <page_objects.admin_section.sections.catalog.products.products_page.ProductsPage object at 0x7f53c86eae80>\nlocator = 'xpath'\nselector = '//tbody/tr[./td[contains(text(), \"Canon\")]]//input', timeout = 5\n\n    def find_element_with_wait(self, locator, selector, timeout=5):\n        self.logger.debug(f\"Поиск элемента '{selector}'\")\n        try:\n>           element = WebDriverWait(self.browser, timeout).until(EC.presence_of_element_located((locator, selector)))\n\n../page_objects/base_page.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d342c9f717e2e11f8835ef3c85351631\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f53c86eafd0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../venv/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbrowser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"d342c9f717e2e11f8835ef3c85351631\")>\nurl = 'http://192.168.1.123:8081/'\n\n    def test_delete_product(browser, url):\n        '''\n        Удаление товара из списка в разделе администартора.\n        '''\n        login_page = LoginPage(browser)\n        menu = NavigationPanel(browser)\n        browser_alert = BrowserAlert(browser)\n        title_panel = TitlePanel(browser)\n        login_page.open_page(url)\n        login_page.sign_in(\"user\", \"bitnami\")\n        menu.open_section(Sections.CATALOG_SECTION)\n        menu.open_subsection(Sections.PRODUCTS_SUBSECTION)\n        products_page = ProductsPage(browser)\n>       products_page.checkbox_click(\"Canon\")\n\ntest_opencart.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../page_objects/admin_section/sections/catalog/products/products_page.py:30: in checkbox_click\n    self.click_button(*product_checkbox)\n../page_objects/base_page.py:46: in click_button\n    button = self.find_element_with_wait(locator, selector)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page_objects.admin_section.sections.catalog.products.products_page.ProductsPage object at 0x7f53c86eae80>\nlocator = 'xpath'\nselector = '//tbody/tr[./td[contains(text(), \"Canon\")]]//input', timeout = 5\n\n    def find_element_with_wait(self, locator, selector, timeout=5):\n        self.logger.debug(f\"Поиск элемента '{selector}'\")\n        try:\n            element = WebDriverWait(self.browser, timeout).until(EC.presence_of_element_located((locator, selector)))\n        except TimeoutException:\n            self.attach_screenshot_to_report()\n>           raise AssertionError(\"Не найден элемент с селектором: {}\".format(selector))\nE           AssertionError: Не найден элемент с селектором: //tbody/tr[./td[contains(text(), \"Canon\")]]//input\n\n../page_objects/base_page.py:21: AssertionError"}, "description": "\n    Удаление товара из списка в разделе администартора.\n    ", "attachments": [{"name": "d342c9f717e2e11f8835ef3c85351631", "source": "b689d5a3-c177-463a-baea-813322dce4de-attachment.png", "type": "image/png"}, {"name": "log", "source": "8b566c48-6eb6-46f5-966e-0e35f4c38cfa-attachment.txt", "type": "text/plain"}], "start": 1634586173787, "stop": 1634586185120, "uuid": "1fdff8ec-b6d6-4cb2-a489-a5342d75e874", "historyId": "47fa9a9d0b0287c16f0d3398478561c6", "testCaseId": "87071810d77f94bbd763bb013079512a", "fullName": "tests.test_opencart#test_delete_product", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_opencart"}, {"name": "host", "value": "pbochkarev-workmashine"}, {"name": "thread", "value": "95172-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_opencart"}]}