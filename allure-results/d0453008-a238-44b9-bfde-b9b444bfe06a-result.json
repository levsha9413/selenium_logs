{"name": "test_new_customer_registration", "status": "failed", "statusDetails": {"message": "AssertionError: Не найден элемент с селектором: //h1[text()=\"Your Account Has Been Created!\"]", "trace": "self = <page_objects.customer_section.pages.register_page.RegisterPage object at 0x7f1e4ae9edc0>\nlocator = 'xpath', selector = '//h1[text()=\"Your Account Has Been Created!\"]'\ntimeout = 5\n\n    def find_element_with_wait(self, locator, selector, timeout=5):\n        self.logger.debug(f\"Поиск элемента '{selector}'\")\n        try:\n>           element = WebDriverWait(self.browser, timeout).until(EC.presence_of_element_located((locator, selector)))\n\n../page_objects/base_page.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"24b1a141f245bdba253b30f1ac7cf450\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f1e4ae7c580>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../venv/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbrowser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"24b1a141f245bdba253b30f1ac7cf450\")>\nurl = 'http://192.168.1.123:8081/'\n\n    def test_new_customer_registration(browser, url):\n        '''\n        Регистрация нового пользователя в магазине опенкарта.\n        '''\n        page = HomePage(browser)\n        panel = UpperUserPanel(browser)\n        page.open_page(url)\n        panel.go_to_register()\n        register_page = RegisterPage(browser)\n        register_page.enter_all_user_fields()\n        register_page.click_privacy_policy_checkbox()\n        register_page.click_continue()\n>       register_page.check_successfully_created()\n\ntest_opencart.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../page_objects/customer_section/pages/register_page.py:71: in check_successfully_created\n    self.find_element_with_wait(*SUCCESSFUL_TITLE)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page_objects.customer_section.pages.register_page.RegisterPage object at 0x7f1e4ae9edc0>\nlocator = 'xpath', selector = '//h1[text()=\"Your Account Has Been Created!\"]'\ntimeout = 5\n\n    def find_element_with_wait(self, locator, selector, timeout=5):\n        self.logger.debug(f\"Поиск элемента '{selector}'\")\n        try:\n            element = WebDriverWait(self.browser, timeout).until(EC.presence_of_element_located((locator, selector)))\n        except TimeoutException:\n>           raise AssertionError(\"Не найден элемент с селектором: {}\".format(selector))\nE           AssertionError: Не найден элемент с селектором: //h1[text()=\"Your Account Has Been Created!\"]\n\n../page_objects/base_page.py:19: AssertionError"}, "description": "\n    Регистрация нового пользователя в магазине опенкарта.\n    ", "attachments": [{"name": "log", "source": "c03686b8-e9f9-48a2-a035-8929a2afb444-attachment.txt", "type": "text/plain"}], "start": 1634364589928, "stop": 1634364649610, "uuid": "db0c8f23-9861-430a-bcc6-8521f5f956ee", "historyId": "b8a7455e7804c3784059a2b6029c24ce", "testCaseId": "88f981a6c0cacd91618a068991ec4f00", "fullName": "tests.test_opencart#test_new_customer_registration", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_opencart"}, {"name": "host", "value": "pavel-Aspire-V3-571G"}, {"name": "thread", "value": "446150-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_opencart"}]}