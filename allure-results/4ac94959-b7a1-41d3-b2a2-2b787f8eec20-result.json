{"name": "Добавление нового товара в разделе администратора", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: (386, -14) is out of bounds of viewport width (1920) and height (970)", "trace": "browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"394c0579-eec5-4aba-a3a9-64641b44ca3a\")>\nurl = 'http://192.168.1.123:8081'\n\n    @allure.title(\"Добавление нового товара в разделе администратора\")\n    def test_add_new_product(browser, url):\n        login_page = LoginPage(browser)\n        menu = NavigationPanel(browser)\n        title_panel = TitlePanel(browser)\n        products_page = ProductsPage(browser)\n        login_page.open_page(url)\n        login_page.sign_in(\"user\", \"bitnami\")\n        menu.open_section(Sections.CATALOG_SECTION)\n        menu.open_subsection(Sections.PRODUCTS_SUBSECTION)\n        title_panel.add_button_click()\n        add_product_page = AddProductPageGeneral(browser)\n        add_product_page.enter_all_fields()\n        add_product_page = AddProductPageData(browser)\n>       add_product_page.switch_to_data_tab()\n\ntest_opencart.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../page_objects/admin_section/sections/catalog/products/add_product_page.py:70: in switch_to_data_tab\n    self.click_button(*self.DATA_TAB)\n../page_objects/base_page.py:49: in click_button\n    actions.perform()\n../venv/lib/python3.8/site-packages/selenium/webdriver/common/action_chains.py:80: in perform\n    self.w3c_actions.perform()\n../venv/lib/python3.8/site-packages/selenium/webdriver/common/actions/action_builder.py:76: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n../venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f8dc2727700>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"(386, -14) is out of bounds of view...arionette/action.js:1055:35\\\\naction.dispatch/chainEvents<@chrome://remote/content/marionette/action.js:1023:20\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: (386, -14) is out of bounds of viewport width (1920) and height (970)\n\n../venv/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:242: MoveTargetOutOfBoundsException"}, "steps": [{"name": "Перейти на страницу авторизации", "status": "passed", "parameters": [{"name": "_url", "value": "'http://192.168.1.123:8081'"}], "start": 1637778332562, "stop": 1637778334570}, {"name": "Ввести логин ", "status": "passed", "parameters": [{"name": "login", "value": "'user'"}], "start": 1637778334571, "stop": 1637778334846}, {"name": "Ввести пароль", "status": "passed", "parameters": [{"name": "password", "value": "'bitnami'"}], "start": 1637778334846, "stop": 1637778335143}, {"name": "Авторизоваться", "status": "passed", "start": 1637778335143, "stop": 1637778336628}, {"name": "Открыть раздел меню", "status": "passed", "parameters": [{"name": "selector", "value": "<Sections.CATALOG_SECTION: ('xpath', \"//a[@href='#collapse1']\")>"}], "start": 1637778336629, "stop": 1637778339624}, {"name": "Открыть подраздел", "status": "passed", "parameters": [{"name": "selector", "value": "<Sections.PRODUCTS_SUBSECTION: ('xpath', \"//nav//a[contains(text(),'Product')]\")>"}], "start": 1637778339625, "stop": 1637778341136}, {"name": "Нажать на кнопку \"Добавить\"", "status": "passed", "start": 1637778341137, "stop": 1637778343626}, {"name": "Ввести имя продукта", "status": "passed", "parameters": [{"name": "product_name", "value": "'Test product name'"}], "start": 1637778343626, "stop": 1637778345071}, {"name": "Ввести описание продукта", "status": "passed", "parameters": [{"name": "description", "value": "'Test description 123!@#$%^'"}], "start": 1637778345072, "stop": 1637778345809}, {"name": "Ввести тег заголовка", "status": "passed", "parameters": [{"name": "teg", "value": "'Test_meta_teg'"}], "start": 1637778345809, "stop": 1637778345973}, {"name": "Ввести мета тег ", "status": "passed", "parameters": [{"name": "meta_teg_descriptions", "value": "'Test meta teg descriptions'"}], "start": 1637778345974, "stop": 1637778346164}, {"name": "Ввести ключевые слова", "status": "passed", "parameters": [{"name": "keywords", "value": "'Test keywords'"}], "start": 1637778346164, "stop": 1637778346335}, {"name": "Test product tag", "status": "passed", "parameters": [{"name": "product_tag", "value": "'Test product tag'"}], "start": 1637778346335, "stop": 1637778346527}, {"name": "Переключиться на вкладку \"Data\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: (386, -14) is out of bounds of viewport width (1920) and height (970)\n\n", "trace": "  File \"/home/pbochkarev/sources/selenium_logs/venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/pbochkarev/sources/selenium_logs/page_objects/admin_section/sections/catalog/products/add_product_page.py\", line 70, in switch_to_data_tab\n    self.click_button(*self.DATA_TAB)\n  File \"/home/pbochkarev/sources/selenium_logs/page_objects/base_page.py\", line 49, in click_button\n    actions.perform()\n  File \"/home/pbochkarev/sources/selenium_logs/venv/lib/python3.8/site-packages/selenium/webdriver/common/action_chains.py\", line 80, in perform\n    self.w3c_actions.perform()\n  File \"/home/pbochkarev/sources/selenium_logs/venv/lib/python3.8/site-packages/selenium/webdriver/common/actions/action_builder.py\", line 76, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"/home/pbochkarev/sources/selenium_logs/venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"/home/pbochkarev/sources/selenium_logs/venv/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1637778346527, "stop": 1637778347635}], "attachments": [{"name": "log", "source": "8a018848-9663-4d5e-8977-f7f69d45cc63-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "37695f12-69fb-4277-b1af-847637400f0f-attachment.txt", "type": "text/plain"}], "start": 1637778332561, "stop": 1637778347641, "uuid": "f7dc2c9b-aa9f-4d5c-b571-60ac5c114de9", "historyId": "b55c021cdeafe72ecf7a79f0791093ee", "testCaseId": "9892b4638947d660b188d7c7d117b279", "fullName": "tests.test_opencart#test_add_new_product", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_opencart"}, {"name": "host", "value": "pbochkarev-workmashine"}, {"name": "thread", "value": "23689-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_opencart"}]}